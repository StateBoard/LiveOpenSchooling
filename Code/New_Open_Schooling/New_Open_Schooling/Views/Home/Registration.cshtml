@model New_Open_Schooling.Models.Registration_Model
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/Home_Layout.cshtml";


}
<style>
   @@media (min-width: 768px) and (max-width: 1199px)
          {
       .respons{

       }
            .respons1 {
               
                padding-top: 50px
            }
           .container .row{
                align-items:center;
                padding-left:300px;
            }
          }
    @@media(min-width:992px) and (max-width: 1199px)
    {
        .col-md-1{
            display:none;
        }
    }
    
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@


@*@if (TempData["Msg"] != null)
    {
        <h4 style="color:red">@TempData["Msg"].ToString()</h4>
    }*@
@*@using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPostImage(this)", data_restUrl = Url.Action("Registration", "Home", new { id = 0 }) }))
    {
        @Html.AntiForgeryToken()*@

<form id="submit_form">

   
    <div class="container embed-responsive-item" style="margin-left:-10px">
        <div class="row" style="font-size: medium; font-weight: bold; text-align: center; line-height: 30px; padding-top: 10px;">
            Registration Form
        </div>
        <br />
        @*<div class="form-group">
            <div class="row">
                <div>
                    <div class="col-md-1"></div>
                    <div class="col-lg-2">
                        <span>1)   Enter UID NO</span><span style="color:Red">*</span>
                    </div>
                    <div class="col-lg-3">

                        @Html.TextBoxFor(model => model.UID, new { @class = "form-control", @name = "UID ", maxLength = 8, @required = "required" })
                        @Html.ValidationMessageFor(model => model.UID, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div>
                    <div class="col-lg-2">
                        <span>2)   Enter User ID</span><span style="color:Red">*</span>
                    </div>
                    <div class="col-lg-3">

                        @Html.TextBoxFor(model => model.User_Id, new { @class = "form-control", @name = "User_Id", @required = "required", maxLength = 8, })
                        @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
        </div>*@
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>1)   First Name :</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.TextBoxFor(model => model.First_Name, new { @class = "form-control", @name = "First_Name ", @id = "First_Name", @required = "required" })
                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>2)   Middle Name</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Middle_Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Middle_Name, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>3)   Last Name:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>4)   Mother Name</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Mother_Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Mother_Name, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>5)   Adhar No:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Adhar_no, new { htmlAttributes = new { @class = "form-control", @required = "required", maxLength = 12 } })
                @Html.ValidationMessageFor(model => model.Adhar_no, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>6)   Mobile No</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Mobile_No, new { htmlAttributes = new { @class = "form-control", @required = "required", maxLength = 10 } })
                @Html.ValidationMessageFor(model => model.Mobile_No, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>7)   Village:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Village, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Village, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>8)   District:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.DropDownListFor(model => model.District, ViewBag.districtList as List<SelectListItem>, new { style = "width: 250px;", @class = "btn btn-default dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>9)   Taluka:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.DropDownListFor(model => model.Taluka, new SelectList(string.Empty, "Value", "Text"), "-Select Taluka-", new { style = "width: 250px;", @class = "btn btn-default dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.Taluka, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>10)   State:</span><span style="color:Red">*</span>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    <div>
                        <select name="State" id="State" class="btn btn-default dropdown-toggle" style="width:250px;">
                            <option selected="selected" value="0">-Select State-</option>
                            <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                            <option value="Telangana">Telangana</option>
                            <option value="Andhra Pradesh">Andhra Pradesh</option>
                            <option value="Assam">Assam</option>
                            <option value="Bihar">Bihar</option>
                            <option value="Chhattisgarh">Chhattisgarh</option>
                            <option value="Goa">Goa</option>
                            <option value="Gujarat">Gujarat</option>
                            <option value="Haryana">Haryana</option>
                            <option value="Himachal Pradesh">Himachal Pradesh</option>
                            <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                            <option value="Jharkhand">Jharkhand</option>
                            <option value="Karnataka">Karnataka</option>
                            <option value="Kerala">Kerala</option>
                            <option value="Tripura">Tripura</option>
                            <option value="Uttaranchal">Uttaranchal</option>
                            <option value="Uttar Pradesh">Uttar Pradesh</option>
                            <option value="Madya Pradesh">Madya Pradesh</option>
                            <option value="Maharashtra">Maharashtra</option>
                            <option value="Manipur">Manipur</option>
                            <option value="Meghalaya">Meghalaya</option>
                            <option value="Mizoram">Mizoram</option>
                            <option value="Nagaland">Nagaland</option>
                            <option value="Orissa">Orissa</option>
                            <option value="West Bengal">West Bengal</option>
                            <option value="Punjab">Punjab</option>
                            <option value="Rajasthan">Rajasthan</option>
                            <option value="Sikkim">Sikkim</option>
                            <option value="Tamil Nadu">Tamil Nadu</option>
                            <option value="Andaman and Nicobar Islands	">Andaman and Nicobar Islands	</option>
                            <option value="Chandigarh	">Chandigarh	</option>
                            <option value="Dadar and Nagar Haveli	">Dadar and Nagar Haveli	</option>
                            <option value="Daman and Diu">Daman and Diu	</option>
                            <option value="Delhi">Delhi</option>
                            <option value="Lakshadeep">Lakshadeep</option>
                            <option value="Pondicherry">Pondicherry</option>
                            <option value="other">other</option>

                        </select>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>11) Address :</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">

                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" ,@id= "Address", @name= "Address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>12)  Minority_Religion:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.DropDownListFor(model => model.Minority_Religion, new List<SelectListItem>
                           {
                               new SelectListItem { Text = "Non-Minority", Value = "Non-Minority"},
                               new SelectListItem { Text = "Muslim", Value = "Muslim"},
                               new SelectListItem { Text = "Christian", Value = "Christian"},
                                new SelectListItem { Text = "Buddhist", Value = "Buddhist"},
                               new SelectListItem { Text = "Sikh", Value = "Sikh"},
                                new SelectListItem { Text = "Parsi", Value = "Parsi"},
                               new SelectListItem { Text = "Jain", Value = "Jain"},

                            }, "Select ", new { @class = "btn btn-default dropdown-toggle", @style = "width:150px" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>13)   Pin Code No:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Pin_Code, new { htmlAttributes = new { @class = "form-control", @required = "required", maxLength = 6 } })
                @Html.ValidationMessageFor(model => model.Pin_Code, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>14)   Date of Birth:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                <input type="date" id="Date_of_birth" name="Date_of_birth" style="width:250px;" />
                @*@Html.EditorFor(model => model.Date_of_Birth, new { htmlAttributes = new { @class = "form-control", @required = "required" } })*@
                @Html.ValidationMessageFor(model => model.Date_of_Birth, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>15)   DOB in Words:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.DOB_Words, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB_Words, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>16)   DOB Village:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.DOB_Village, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB_Village, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>17)   DOB Taluka :</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">

                @Html.EditorFor(model => model.DOB_Taluka, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB_Taluka, "", new { @class = "text-danger" })

            </div>
            @*<div class="col-md-1"></div>*@
            <div class="col-lg-2">
                <span>18)DOB District:</span><span style="color:Red">*</span>
            </div>
            <div class="col-lg-3">
                @Html.EditorFor(model => model.DOB_District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB_District, "", new { @class = "text-danger" })

            </div>
        </div>

        <br />
        <div class="row">

            <div class="respons">


                <div class="col-md-1"></div>
                <div class="col-lg-2">
                    <span>19)   Email:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                       
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @name = "Email ", @id = "Email", } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="respons1">
                @*<div class="col-md-1"></div>*@
                <div class="col-lg-2">
                    <span>20)   Gender:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <div>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(m => m.Gender, "Male", new { @id = "Male" }) Male
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(m => m.Gender, "Female", new { @id = "Female" }) Female
                            </label>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="respons">
                <div class="col-md-1"></div>
                <div class="col-lg-2">
                    <span>21)   Standard:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <div>
                            @Html.DropDownListFor(model => model.Standard, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "5th", Value = "5th"},
                                new SelectListItem { Text = "8th", Value = "8th"},
                             }, "Select ", new { @id = "Standard", @class = "btn btn-default dropdown-toggle", @style = "width:250px" })
                            @Html.ValidationMessageFor(model => model.Standard, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="col-md-1"></div>*@
            <div class="respons1">
                <div class="col-lg-2">
                    <span>22)   Medium:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.Medium, new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "English", Value = "English"},
                                    new SelectListItem { Text = "Marathi", Value = "Marathi"},
                                    new SelectListItem { Text = "Urdu", Value = "Urdu"},
                                 }, "Select ", new { @class = "btn btn-default dropdown-toggle", @style = "width:250px" })
                        @Html.ValidationMessageFor(model => model.Medium, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
        </div>
        <div class="row">

            <div class="respons">
                <div class="col-md-1"></div>
                <div class="col-lg-2">
                    <span>23)   District Center:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.District_Center, ViewBag.districtList as List<SelectListItem>, new { style = "width: 250px;", @class = "btn btn-default dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.District_Center, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="col-md-1"></div>*@
            <div class="respons1">
                <div class="col-lg-2">
                    <span>24)   Taluka Center:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.Taluka_Center, new SelectList(string.Empty, "Value", "Text"), "-Select Taluka-", new { style = "width: 250px;", @class = "btn btn-default dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.Taluka_Center, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="respons">


                <div class="col-md-1"></div>
                <div class="col-lg-2">
                    <span>25)   Center Name:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.Center, new SelectList(string.Empty, "Value", "Text"), "-Select Center-", new { style = "width: 250px;", @class = "btn btn-default dropdown-toggle" })

                        @Html.ValidationMessageFor(model => model.Center, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @*<div class="col-md-1"></div>*@
            <div class="respons1">
                <div class="col-lg-2">
                    <span>26)   Previous Attended School:</span><span style="color:Red">*</span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <div>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(m => m.Previous_Attend_School_YN, "Yes", new { @id = "PrevAttendSchoolYes" }) Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(m => m.Previous_Attend_School_YN, "No", new { @id = "PrevAttendSchoolNo" }) No
                            </label>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">

            <div id="error" style="display:none" class="respons">
                <div class="col-sm-6">
                    <span style="font-weight:700;color: #FF0000;">Please Select Standard first...!</span>
                </div>
            </div>
            <div id="selfDeclaration" style="display:none" class="respons1">
                <div class="col-sm-1">
                    <span></span>
                </div>
                <div class="col-sm-3">
                    <span>27).a Attach the self declaration statement if student has not gone to school? :<span style="color: red">*</span></span>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        <div>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Self_Declaration_Not_Gone_School, "Yes") Yes
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Self_Declaration_Not_Gone_School, "No") No
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="lastSchoolInfo" style="display:none">
            <div class="respons">
                <div class="col-sm-1">
                    <span></span>
                </div>
                <div class="col-sm-3">
                    <span>27.1 )Name of address last attended recognised School :<span style="color: red">*</span></span>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.Previous_Attend_School, new { htmlAttributes = new { @class = "form-control", @type = "Date", @style = "width:150px" } })
                    </div>
                </div>
            </div>
            <div class="respons1">

                <div class="col-sm-3">
                    <span>27.2)Date of leaving the last attended recognised school :<span style="color: red">*</span></span>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        <div>
                            <div>
                                @Html.EditorFor(model => model.Date_Of_Leaving_Last_Attended_School, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="standartLeft" style="display:none">
            <div class="col-sm-1">
                <span></span>
            </div>
            <div class="col-sm-3">
                <span>27.3)Standard in which school Left :<span style="color: red">*</span></span>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    <div>
                        <div id="standard5th" style="display:none">
                            <select name="Class_Of_Last_Attend_5" id="Class_Of_Last_Attend_5" class="btn btn-default dropdown-toggle" style="width:150px;">
                                <option selected="selected" value="0">-Select Class-</option>
                                <option value="1st">1st</option>
                                <option value="2nd">2nd</option>
                                <option value="3rd">3rd</option>
                                <option value="4th">4th</option>
                            </select>
                        </div>
                        <div id="standard8th" style="display:none">
                            <select name="Class_Of_Last_Attend_8" id="Class_Of_Last_Attend_8" class="btn btn-default dropdown-toggle" style="width:150px;">
                                <option selected="selected" value="0">-Select Class-</option>
                                <option value="1st">1st</option>
                                <option value="2nd">2nd</option>
                                <option value="3rd">3rd</option>
                                <option value="4th">4th</option>
                                <option value="5th">5th</option>
                                <option value="6th">6th</option>
                                <option value="7th">7th</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>28)   Candidate Handicaped:</span><span style="color:Red">*</span>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <div>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.Candidate_Handicaped_YN, "Yes", new { @id = "HandicapedYes" }) Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.Candidate_Handicaped_YN, "No", new { @id = "HandicapedNo" }) No
                        </label>
                        @Html.HiddenFor(m => m.Candidate_Handicaped_YN)
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div id="Handicapcategory" style="display:none">
                <div class="col-md-1"></div>
                <div class="col-sm-2">
                    <span>28. 1) Select Category :<span style="color: red">*</span></span>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <div>
                            @Html.DropDownListFor(model => model.Handicap, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Blindness/partail blind", Value = "Blindness/partail blind"},
                                new SelectListItem { Text = "Leprosy Cured Persons", Value = "Leprosy Cured Persons"},
                                new SelectListItem { Text = "Hearing Impairment - deaf and dumb", Value = "Hearing Impairment - deaf and dumb"},
                                new SelectListItem { Text = "Locomotor Disability including Orthopedic disability", Value = "Locomotor Disability including Orthopedic disability"},
                                new SelectListItem { Text = "Dwarfism", Value = "Dwarfism"},
                                new SelectListItem { Text = "Intellectual Disability - Mentally challenged", Value = "Intellectual Disability - Mentally challenged"},
                                new SelectListItem { Text = "Multiple Disabilities", Value = "Multiple Disabilities"},
                                new SelectListItem { Text = "Mental Illness", Value = "Mental Illness"},
                                new SelectListItem { Text = "Autism Spectrum Disorder", Value = "Autism Spectrum Disorder"},
                                new SelectListItem { Text = "Cerebral Palsy", Value = "Cerebral Palsy"},
                                new SelectListItem { Text = "Muscular Dystrophy", Value = "Muscular Dystrophy"},
                                new SelectListItem { Text = "Chronic Neurological Conditions", Value = "Chronic Neurological Conditions"},
                                new SelectListItem { Text = "Specific Learning Disabilities", Value = "Specific Learning Disabilities"},
                                new SelectListItem { Text = "Slow learners / Intellectual Disablity Border Line", Value = "Slow learners / Intellectual Disablity Border Line"},
                                new SelectListItem { Text = "Multiple Sclerosis", Value = "Multiple Sclerosis"},
                                new SelectListItem { Text = "Speech and Language Disability", Value = "Speech and Language Disability"},
                                new SelectListItem { Text = "Thalassemia / Cancer", Value = "Thalassemia / Cancer"},
                                new SelectListItem { Text = "Hemophilia", Value = "Hemophilia"},
                                new SelectListItem { Text = "Sickle Cell Disease", Value = "Sickle Cell Disease"},
                                new SelectListItem { Text = "Acid Attack Victim", Value = "Acid Attack Victim"},
                                new SelectListItem { Text = "Parkinson’s Disease", Value = "Parkinson’s Disease"},
                                new SelectListItem { Text = "Other Disablities", Value = "Other Disablities"},
                             }, "Select ", new { @id = "Handicap", @class = "btn btn-default dropdown-toggle", @style = "width:150px" })

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-lg-2">
                <span>29)Types Of User:</span>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    <div>
                        <label class="radio-inline">
                            <input id="Type_Of_User" name="Type_Of_User" type="radio" value="Fresh"> Fresh
                        </label>
                    </div>
                </div>
            </div>


        </div>
        <div class="row" id="nsqfSubject" style="display:none">
            <div class="col-md-1"></div>
            <div class="col-sm-2">
                <span>30)  Will you take NSQF subject? :<span style="color: red">*</span></span>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <div>
                        <label class="radio-inline">
                            <input id="NsqfYes" name="NSQF_Subject" type="radio" value="Yes">Yes
                        </label>
                        <label class="radio-inline">
                            <input id="NsqfNo" name="NSQF_Subject" type="radio" value="No"> No
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-sm-12">
                <div class="col-md-1"></div>
                <span style="font-weight:700">
                    Subject :<span style="color: red">*</span>
                </span><br />
                <div class="col-md-1"></div>
                <p style="font-weight:700;display:none" id="noteYes">
                    Note-Group A- Any 1 or 2 language subject, Group B or Group C- Any 3 or 4 subjects (Note:- You have to select compulsory 5 subject in Group- A,B,C)
                </p>

                <p style="font-weight:700;display:none" id="noteNo">
                    Note-Group A- Any 2 language subject, Group B - compulsory this subject, Group C- Any 1 subject
                </p>
            </div>
        </div>

        <div class="row" id="subjectGroup" style="display:none">
            <ul style="font-weight:700">
            </ul>
            <div class="col-md-1"></div>
            <div class="col-sm-4">
                <span style="font-weight:700">
                    Group_A
                </span><br />
                <span id="SubjectA">
                </span>
            </div>
            <div class="col-sm-4">
                <span style="font-weight:700">
                    Group-B
                </span><br />
                <span id="SubjectB">
                </span>

            </div>
            <div class="col-sm-4">
                <span style="font-weight:700">
                    Group-C
                </span><br />
                <span id="SubjectC">
                </span><br />
                <span style="font-weight:700">
                    Group-D
                </span><br />
                <span id="SubjectD"></span>
            </div>
        </div>
        <div class="col-md-1"></div>
        <div class="row" id="subjectD_Nsqf" style="display:none">
            <div class="col-sm-4">
                <span style="font-weight:700">
                    Group-D-NSQF Subject
                </span><br />
                <span id="Subject_NSQF">
                </span>
            </div>
        </div><br />

        <div style="text-align:center">
            <span id="extraSub" style="color:red; font-weight:bold">

            </span>
        </div>
        <div class="row">
            <div class="col-md-1"></div>
           
           

            <div class="col-lg-2">
                <span>32)   Age Certified Proof:</span><span style="color:Red">*</span>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <input type="file" name="AgeCertificate" id="Age_Certified_Proof" accept="image/jpeg, image/png" />
                    @Html.ValidationMessageFor(model => model.Age_Certified_Proof, "", new { @class = "text-danger" })


                </div>
            </div>
        </div>



        <div class="row">
            <div class="respons">
                <div class="col-md-1"></div>
                <div class="col-sm-2" style="margin-top:40px">
                    <span>
                        33)Upload Photo<span style="color: red">*</span>
                    </span>
                </div>

                <div class="col-sm-3">

                    <img src="~/Design/Images/camera.png" style="margin:10px" height="40" width="40" id="imagePreview" />
                    <input type="file" name="Upload_Photo" id="Photo" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                    @*@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="respons1">
                <div class="col-md-1"></div>
                <div class="col-sm-2" style="margin-top:40px">
                    <span>

                        34)   Upload Signature<span style="color: red">*</span>
                    </span>
                </div>
                <div class="col-sm-3">
                    <img src="~/Design/Images/sign.jpg" style="margin:10px" height="40" width="40" id="imagePreview1" />
                    <input type="file" name="Upload_Sign" id="Signature" accept="image/jpg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview1'))" />
                    @*@Html.ValidationMessageFor(model => model.Signature, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div style="height:35px;"></div>

        <div class="row">
            <div class="col-md-1"></div>
           
        </div>
        <div class="row" id="subjectGroup" style="display:none">
            <span id="AppId">
            </span>
        </div>





        <center>
            <input type="button" id="btn_submit" class="btn btn-block btn-primary btn-lg font-weight-bolder auth-form-btn" value="SUBMIT" onclick="passvalues()" style="background-color: #3eadcf;font-weight:bold">
        </center>
    </div>
              
</form>
@*}*@

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">




    $(document).ready(function () {

        $("#btn_submit").click(function (e) {

              /*  if ($("#submit_form").valid()) {*/
                    var formData = new FormData($(submit_form)[0]);
                    console.log(formData);
                    $.ajax({
                        url: "../Home/Registration",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        beforeSend: function () {
                            Showloader();
                        },
                        complete: function () {
                            Hideloader();
                        },
                        success: function (Data) {
                            if (Data.Result) {
                                Success_Alert(Data.Response);
                                $(submit_form)[0].reset()
                                if (Data.Result == "Submitted") {
                                    debugger

                                    window.location.replace(Data.Message);

                                }
                            }
                            else {
                                Error_Alert(Data.Response);
                            }

                        },
                        error: function (e1, e2, e3) {
                           /* Error_Alert(Data.Response);*/
                        }
                    });
               /* }*/
        })


    });





    function passvalues() {
        debugger

        var firstpara = document.getElementById("First_Name").value;
        localStorage.setItem("textvalue1", firstpara);

        var secondpara = document.getElementById("Last_Name").value;
        localStorage.setItem("textvalue2", secondpara);

        var thirdpara = document.getElementById("Village").value;
        localStorage.setItem("textvalue3", thirdpara);

        var fourthpara = document.getElementById("Taluka").value;
        localStorage.setItem("textvalue4", fourthpara);

        var fifthpara = document.getElementById("District").value;
        localStorage.setItem("textvalue5", fifthpara);

        var foursixthpara = document.getElementById("State").value;
        localStorage.setItem("textvalue6", foursixthpara);

        var seventhpara = document.getElementById("Pin_Code").value;
        localStorage.setItem("textvalue7", seventhpara);

        var eighthpara = document.getElementById("Mobile_No").value;
        localStorage.setItem("textvalue8", eighthpara);

        var ninethpara = document.getElementById("Email").value;
        localStorage.setItem("textvalue9", ninethpara);


        var tenthpara = '@TempData["USERNAME"]'
        localStorage.setItem("textvalue10", tenthpara);

        var elepara = document.getElementById("Address").value;
        localStorage.setItem("textvalue11", elepara);


    }




         $("#District").change(function () {
            $("#Taluka").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getTaluka")',
                dataType: 'json',
                data: { id: $("#District").val() },
                success: function (center) {

                    $.each(center, function (i, center) {
                        $("#Taluka").append('<option value="' + center.Value + '">' + center.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })

        $("#District_Center").change(function () {
            $("#Taluka_Center").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getTaluka")',
                dataType: 'json',
                data: { id: $("#District_Center").val() },
                success: function (center) {
                    $.each(center, function (i, center) {
                        $("#Taluka_Center").append('<option value="' + center.Value + '">' + center.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })

        $("#Taluka_Center").change(function () {
            $("#Center").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getCenter")',
                dataType: 'json',
                data: { id: $("#Taluka_Center").val() },
                success: function (center) {

                    $.each(center, function (i, center) {
                        $("#Center").append('<option value="' + center.Value + '">' + center.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })

        $("#Center").change(function () {
            $("#Center_Code").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getCenterCode")',
                dataType: 'json',
                data: { center: $("#Center").val() },
                success: function (centercode) {
                    $("#Center_Code").val(centercode);
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })



      $("#HandicapedYes").click(function () {
            $("#SubjectA").empty();
            $("#SubjectB").empty();
            $("#SubjectC").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getSubject")',
                dataType: 'json',
                data: {
                    id: $("#Standard").val(),
                    handicaped: $("#HandicapedYes").val()
                },

                success: function (obj) {
                    $.each(obj.SubjectListA, function (key, value) {
                        $("#SubjectA").append('<input id="SUB" name="SUB" class="SUBa" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input>' + '<br/>');
                    });
                    $.each(obj.SubjectListB, function (key, value) {
                        $("#SubjectB").append('<input id="SUB" name="SUB" class="SUBb" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input >' + '<br/>');
                    });
                    $.each(obj.SubjectListC, function (key, value) {
                        $("#SubjectC").append('<input id="SUB" name="SUB" class="SUBc" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input>' + '<br/>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
      })

    $("#HandicapedNo").click(function () {
        debugger;
        $("#SubjectA").empty();
        $("#SubjectB").empty();
        $("#SubjectC").empty();
        $("#SubjectD").empty();
        $("#AppId").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("getSubject")',
            dataType: 'json',
            data: {
                id: $("#Standard").val(),
                handicaped: $("#HandicapedNo").val()
            },
            success: function (obj) {
                $.each(obj.SubjectListA, function (key, value) {
                    $("#SubjectA").append('<input id="SUB" name="SUB" class="SUBA" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');
                });
                $.each(obj.SubjectListB, function (key, value) {
                    $("#SubjectB").append('<input id="SUBB" name="SUB" class="SUBB" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');


                });
                $.each(obj.SubjectListC, function (key, value) {
                    $("#SubjectC").append('<input id="SUB" name="SUB" class="SUBC" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');
                });
                $.each(obj.SubjectListD, function (key, value) {
                    $("#SubjectD").append('<input id="SUB" name="SUB" class="SUBD" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>') + '<br/>';
                });
                var subB = document.getElementsByClassName('SUBB');

                for (var i = 0; i < subB.length; i++) {

                    subB[i].checked = true;

                }



                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
     })
   //----------------------------------------------------------------------------------------

    if ($("#HandicapedYes").checked == true) {
          $("#Standard").change(function () {

         $("#SubjectA").empty();
            $("#SubjectB").empty();
            $("#SubjectC").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getSubject")',
                dataType: 'json',
                data: {
                    id: $("#Standard").val(),
                    handicaped: $("#HandicapedYes").val()
                },

                success: function (obj) {
                    $.each(obj.SubjectListA, function (key, value) {
                        $("#SubjectA").append('<input id="SUB" name="SUB" class="SUBa" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input>' + '<br/>');
                    });
                    $.each(obj.SubjectListB, function (key, value) {
                        $("#SubjectB").append('<input id="SUB" name="SUB" class="SUBb" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input >' + '<br/>');
                    });
                    $.each(obj.SubjectListC, function (key, value) {
                        $("#SubjectC").append('<input id="SUB" name="SUB" class="SUBc" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox">' + value.Subject_Name + '</input>' + '<br/>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;

    });
    }else {
          $("#Standard").change(function () {

         debugger;
        $("#SubjectA").empty();
        $("#SubjectB").empty();
        $("#SubjectC").empty();
        $("#SubjectD").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("getSubject")',
            dataType: 'json',
            data: {
                id: $("#Standard").val(),
                handicaped: $("#HandicapedNo").val()
            },
            success: function (obj) {
                $.each(obj.SubjectListA, function (key, value) {
                    $("#SubjectA").append('<input id="SUB" name="SUB" class="SUBA" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');
                });
                $.each(obj.SubjectListB, function (key, value) {
                    $("#SubjectB").append('<input id="SUBB" name="SUB" class="SUBB" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');


                });
                $.each(obj.SubjectListC, function (key, value) {
                    $("#SubjectC").append('<input id="SUB" name="SUB" class="SUBC" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>' + '<br/>');
                });
                $.each(obj.SubjectListD, function (key, value) {
                    $("#SubjectD").append('<input id="SUB" name="SUB" class="SUBD" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + ' type="checkbox" >' + value.Subject_Name + '</input>') + '<br/>';
                });
                var subB = document.getElementsByClassName('SUBB');

                for (var i = 0; i < subB.length; i++) {

                    subB[i].checked = true;

                }



                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;

    });
    }




        $("#NsqfYes").click(function () {
            $("#Subject_NSQF").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getNSQFSubject")',
                dataType: 'json',
                data: {
                    standard: $("#Standard").val(),
                },
                success: function (objc) {
                    $.each(objc, function (key, value) {
                        $("#Subject_NSQF").append('<input id="SUBNSQF" name="SUBNSQF" onclick = "return chkMaxsubject()" value=' + value.Subject_Code + '  type="checkbox">' + value.Subject_Name + '</input>' + '<br/>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })



</script>


